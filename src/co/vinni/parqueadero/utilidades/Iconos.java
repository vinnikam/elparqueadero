package co.vinni.parqueadero.utilidades;

import java.awt.Image;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.net.URL;
import java.util.Base64;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author Vinni@
 */
public class Iconos {

    private String icono64 = "";

    public Image obtenerIcono() {
        return obtenerImagen(icono64);
    }

    public ImageIcon obtenerImagenParqu() {
        return obtenerImagenIcon(icono64);
    }

    private Image obtenerImagen(String imagen64) {

        // Decodificar el string Base64 a un array de bytes
        byte[] imageBytes = Base64.getDecoder().decode(imagen64);

        // Convertir el array de bytes a una imagen
        Image icon = null;
        try ( ByteArrayInputStream bis = new ByteArrayInputStream(imageBytes)) {
            icon = ImageIO.read(bis);
        } catch (IOException e) {
            e.printStackTrace();
        }
        return icon;
    }

    private ImageIcon obtenerImagenIcon(String imagen64) {

        // Decodificar el string Base64 a un array de bytes
        byte[] imageBytes = Base64.getDecoder().decode(imagen64);

        // Convertir el array de bytes a una imagen
        ImageIcon imageIcon = null;
        try ( ByteArrayInputStream bis = new ByteArrayInputStream(imageBytes)) {
            imageIcon = new ImageIcon(ImageIO.read(bis));
        } catch (IOException e) {
            e.printStackTrace();
        }
        return imageIcon;
    }

    public ImageIcon imagenCarro(int ancho, int alto) {
            ImageIcon originalIcon = new ImageIcon(getClass().getResource("/co/vinni/parqueadero/iconos/carroicono.png"));
            return escalarImagenParqueo(originalIcon, ancho, alto);
    }

    public ImageIcon imagenMoto(int ancho, int alto) {
            ImageIcon originalIcon = new ImageIcon(getClass().getResource("/co/vinni/parqueadero/iconos/motoicono.png"));
            return escalarImagenParqueo(originalIcon, ancho, alto);
    }

    public ImageIcon imagenParqueo(int ancho, int alto) {
            ImageIcon originalIcon = new ImageIcon(getClass().getResource("/co/vinni/parqueadero/iconos/parqueoicono.png"));
            return escalarImagenParqueo(originalIcon, ancho, alto);
    }
    private ImageIcon escalarImagenParqueo(ImageIcon originalIcon, int ancho, int alto) {
            
            Image originalImage = originalIcon.getImage();

            Image scaledImage = originalImage.getScaledInstance(ancho, alto, Image.SCALE_SMOOTH);
            ImageIcon scaledIcon = new ImageIcon(scaledImage);
            return scaledIcon;
    }

}

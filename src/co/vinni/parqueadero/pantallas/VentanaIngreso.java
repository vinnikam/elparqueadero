/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.vinni.parqueadero.pantallas;


import co.vinni.parqueadero.datos.Carro;
import co.vinni.parqueadero.datos.Moto;
import co.vinni.parqueadero.operaciones.Parqueadero;
import co.vinni.parqueadero.utilidades.Iconos;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;


/**
 *
 * @author Vinni
 */
public class VentanaIngreso extends javax.swing.JFrame {

    Parqueadero par = new Parqueadero();
    /**
     * Creates new form VentanaIngreso
     */
    public VentanaIngreso() {
        this.setTitle("Mi Parquito S.A.S.");
        Iconos iconos = new Iconos();
        this.setIconImage(iconos.obtenerIcono());
        initComponents();
        ImageIcon imagePar =  iconos.imagenParqueo(lbImage.getWidth(), lbImage.getHeight());
        if (imagePar != null){
            lbImage.setIcon(imagePar);
        }
        
        //this.lbImage.setIcon(iconos.imagenParqueo());
        this.configurarPlacaCarro();
        this.configurarPlacaMoto();
        
        // ASIGNA EL VALOR A LOS RADIO BUTTON UNO ACTIVO Y EL OTRO INACTIVO
        this.opCarro.setSelected(true);
        this.opCarro.setSelected(false);
        //VERIFICA QUE OPCION SELECIONA PARA MOSTRAR LA CAJA DE LA PLACA
        this.visualizarCajaPlaca();
        
        
        this.listarCarros();
        this.listarMotos();
        this.actualizarCupos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new JTextField();
        jButton1 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        cjplacacarro = new JTextField();
        btingresocarro = new javax.swing.JButton();
        cjplacamoto = new JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaCarros = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaMotos = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btsalircarro = new javax.swing.JButton();
        opMoto = new javax.swing.JRadioButton();
        opCarro = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        lbImage = new javax.swing.JLabel();
        lbImgTipoveh = new javax.swing.JLabel();
        lbCupoMoto = new javax.swing.JLabel();
        lbCupoCarro = new javax.swing.JLabel();

        jLabel1.setText("Ingrese placa Carro");

        jButton1.setText("Guardar");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("motos");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(370, 370, 72, 32);

        cjplacacarro.setBackground(new java.awt.Color(204, 204, 204));
        cjplacacarro.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        getContentPane().add(cjplacacarro);
        cjplacacarro.setBounds(170, 230, 150, 54);

        btingresocarro.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btingresocarro.setForeground(new java.awt.Color(0, 51, 255));
        btingresocarro.setText("Ingresa");
        btingresocarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btingresocarroActionPerformed(evt);
            }
        });
        getContentPane().add(btingresocarro);
        btingresocarro.setBounds(390, 210, 172, 41);

        cjplacamoto.setBackground(new java.awt.Color(204, 255, 255));
        cjplacamoto.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        getContentPane().add(cjplacamoto);
        cjplacamoto.setBounds(170, 230, 150, 54);

        listaCarros.setColumns(20);
        listaCarros.setRows(5);
        jScrollPane1.setViewportView(listaCarros);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(43, 413, 226, 360);

        listaMotos.setColumns(20);
        listaMotos.setRows(5);
        jScrollPane2.setViewportView(listaMotos);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(362, 413, 243, 360);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Seleccione el tipo de vehiculo");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(110, 30, 340, 32);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("carros:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(50, 370, 68, 32);

        btsalircarro.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btsalircarro.setForeground(new java.awt.Color(0, 153, 0));
        btsalircarro.setText("Sale");
        btsalircarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsalircarroActionPerformed(evt);
            }
        });
        getContentPane().add(btsalircarro);
        btsalircarro.setBounds(390, 270, 172, 41);

        buttonGroup1.add(opMoto);
        opMoto.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        opMoto.setForeground(new java.awt.Color(0, 153, 102));
        opMoto.setText("Moto");
        opMoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opMotoActionPerformed(evt);
            }
        });
        getContentPane().add(opMoto);
        opMoto.setBounds(280, 70, 160, 41);

        buttonGroup1.add(opCarro);
        opCarro.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        opCarro.setForeground(new java.awt.Color(204, 0, 0));
        opCarro.setText("Carro");
        opCarro.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                opCarroStateChanged(evt);
            }
        });
        opCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opCarroActionPerformed(evt);
            }
        });
        getContentPane().add(opCarro);
        opCarro.setBounds(110, 70, 160, 41);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setText("Digite la placa del carro:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(40, 170, 256, 32);
        getContentPane().add(lbImage);
        lbImage.setBounds(500, 10, 110, 100);
        getContentPane().add(lbImgTipoveh);
        lbImgTipoveh.setBounds(30, 220, 100, 80);

        lbCupoMoto.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbCupoMoto.setForeground(new java.awt.Color(255, 0, 0));
        lbCupoMoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCupoMoto.setText("0");
        getContentPane().add(lbCupoMoto);
        lbCupoMoto.setBounds(560, 370, 37, 30);

        lbCupoCarro.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbCupoCarro.setForeground(new java.awt.Color(255, 0, 0));
        lbCupoCarro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCupoCarro.setText("0");
        getContentPane().add(lbCupoCarro);
        lbCupoCarro.setBounds(240, 370, 30, 30);

        setSize(new java.awt.Dimension(633, 828));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btingresocarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btingresocarroActionPerformed
        // TODO add your handling code here:
        this.ingresarVehiculo();
    }//GEN-LAST:event_btingresocarroActionPerformed

    private void btsalircarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsalircarroActionPerformed
        // TODO add your handling code here:
        this.sacarVehiculo();
    }//GEN-LAST:event_btsalircarroActionPerformed

    private void opCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opCarroActionPerformed
        // TODO add your handling code here:
        this.visualizarCajaPlaca();
        
    }//GEN-LAST:event_opCarroActionPerformed

    private void opCarroStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_opCarroStateChanged
        // TODO add your handling code here:
        //this.visualizarCajaPlaca();
    }//GEN-LAST:event_opCarroStateChanged

    private void opMotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opMotoActionPerformed
        // TODO add your handling code here:
        this.visualizarCajaPlaca();
        
    }//GEN-LAST:event_opMotoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaIngreso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btingresocarro;
    private javax.swing.JButton btsalircarro;
    private javax.swing.ButtonGroup buttonGroup1;
    private JTextField cjplacacarro;
    private JTextField cjplacamoto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private JTextField jTextField1;
    private javax.swing.JLabel lbCupoCarro;
    private javax.swing.JLabel lbCupoMoto;
    private javax.swing.JLabel lbImage;
    private javax.swing.JLabel lbImgTipoveh;
    private javax.swing.JTextArea listaCarros;
    private javax.swing.JTextArea listaMotos;
    private javax.swing.JRadioButton opCarro;
    private javax.swing.JRadioButton opMoto;
    // End of variables declaration//GEN-END:variables

    private void asignarCarro() {
        if(!this.validarTexto(cjplacacarro, "La placa del carro esta vacio"))
            return ;
        if (par.buscarCarro(cjplacacarro.getText())){
            JOptionPane.showMessageDialog(this, "Placa carro ya existe", "Información", JOptionPane.WARNING_MESSAGE);
            return ;
        }
        Carro uncarro = new Carro();
        uncarro.modificarPlaca(cjplacacarro.getText());
        
        par.agregarCarro(uncarro);
        cjplacacarro.setText("");
        this.listarCarros();
        //JOptionPane.showMessageDialog(this, "Ingreso el carro ");
    }
    private void sacarCarro() {
        if(!this.validarTexto(cjplacacarro, "La placa del carro esta vacio"))
            return ;
        Carro uncarro = new Carro();
        uncarro.modificarPlaca(cjplacacarro.getText());
        cjplacacarro.setText("");
        long valorPagar = par.sacarCarro(uncarro);
        this.listarCarros();
        String mensajePago = String.format("El vehiculo de placa %s debe pagar $ %d", uncarro.obtenerPlaca(), valorPagar);
        JOptionPane.showMessageDialog(this, mensajePago, "PAGAR", JOptionPane.INFORMATION_MESSAGE);
    }

    private void asignarMoto() {
        if(!this.validarTexto(cjplacamoto, "La placa de la moto esta vacio"))
            return ;
        if (par.buscarMoto(cjplacamoto.getText())){
            JOptionPane.showMessageDialog(this, "Placa de la moto ya existe", "Información", JOptionPane.WARNING_MESSAGE);
            return ;
        }
        Moto lamoto = new Moto();
        lamoto.setPlaca(cjplacamoto.getText());
        par.agregarMoto(lamoto);
        cjplacamoto.setText("");
        this.listarMotos();
        
    }
    private void sacarMoto() {
        if(!this.validarTexto(cjplacamoto, "La placa de la moto esta vacio"))
            return ;
        
            
        Moto unamoto = new Moto();
        unamoto.setPlaca(cjplacamoto.getText());
        
        long valorPagar = par.sacarMoto(unamoto);
        cjplacamoto.setText("");
        this.listarMotos();
        String mensajePago = String.format("El vehiculo de placa %s debe pagar $ %d", unamoto.getPlaca(), valorPagar);
        JOptionPane.showMessageDialog(this, mensajePago, "PAGAR", JOptionPane.INFORMATION_MESSAGE);
        
    }
    private void listarCarros(){
        this.listaCarros.setText("");
        
         Carro[] lista = par.obtenerCarros();
         
         for (int i = 0; i < lista.length; i++) {
             Carro item = lista[i];
             if (item != null){
                //System.out.println("Puesto ["+i+"] -> Carro placa : "+item.obtenerPlaca());    
                this.listaCarros.append("["+i+"] -> ["+item.obtenerPlaca()+"]\n");
             }
                
//             else{
//                 //System.out.println("Puesto ["+i+"] -> Disponible ");
//                 this.listaCarros.append("["+i+"] -> [ ] \n");
//             }
                 
            
        }
         actualizarCupos();
        
    }
    private void listarMotos(){
        this.listaMotos.setText("");
        
         Moto[] lista = par.obtenerMotos();
         
         for (int i = 0; i < lista.length; i++) {
             Moto item = lista[i];
             if (item != null){
                //System.out.println("Puesto ["+i+"] -> Carro placa : "+item.obtenerPlaca());    
                this.listaMotos.append("["+i+"] -> [ "+item.getPlaca()+" ]\n");
             }
//                
//             else{
//                 //System.out.println("Puesto ["+i+"] -> Disponible ");
//                 this.listaMotos.append("["+i+"] -> [ ] \n");
//             }
                 
            
        }
        actualizarCupos();
    }

    private void configurarPlacaCarro() {
        ((AbstractDocument) this.cjplacacarro.getDocument()).setDocumentFilter(new DocumentFilter() {
            @Override
            public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
                String newText = fb.getDocument().getText(0, fb.getDocument().getLength());
                if (string != null) {
                    string = string.toUpperCase();
                }
                newText = new StringBuilder(newText).insert(offset, string).toString();
                if (isValidInput(newText)) {
                    super.insertString(fb, offset, string, attr);
                }
            }

            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                
                if (text != null) {
                    text = text.toUpperCase();
                }
                String newText = fb.getDocument().getText(0, fb.getDocument().getLength());
                
                newText = new StringBuilder(newText).replace(offset, offset + length, text).toString();
                if (isValidInput(newText)) {
                    super.replace(fb, offset, length, text, attrs);
                }
            }

            private boolean isValidInput(String text) {
                if (text.length() > 6) {
                    return false;
                }
                for (int i = 0; i < text.length(); i++) {
                    char c = text.charAt(i);
                    if (i < 3 && !Character.isLetter(c)) {
                        return false;
                    }
                    if (i >= 3 && !Character.isDigit(c)) {
                        return false;
                    }
                }
                return true;
            }
        });
    }
    private void configurarPlacaMoto() {
        ((AbstractDocument) this.cjplacamoto.getDocument()).setDocumentFilter(new DocumentFilter() {
            @Override
            public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
                if (string != null) {
                    string = string.toUpperCase();
                }
                String newText = fb.getDocument().getText(0, fb.getDocument().getLength());
                newText = new StringBuilder(newText).insert(offset, string).toString();
                if (isValidInput(newText)) {
                    super.insertString(fb, offset, string, attr);
                }
            }

            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                if (text != null) {
                    text = text.toUpperCase();
                }
                String newText = fb.getDocument().getText(0, fb.getDocument().getLength());
                newText = new StringBuilder(newText).replace(offset, offset + length, text).toString();
                if (isValidInput(newText)) {
                    super.replace(fb, offset, length, text, attrs);
                }
            }

            private boolean isValidInput(String text) {
                if (text.length() > 6) {
                    return false;
                }
                for (int i = 0; i < text.length(); i++) {
                    char c = text.charAt(i);
                    if (i < 3 && !Character.isLetter(c)) {
                        return false;
                    }
                    if (i >= 3 && !Character.isLetterOrDigit(c)) {
                        return false;
                    }
                }
                return true;
            }
        });
    }

    /**
     * Metodo para mostrar la caja de la placa segun el tipo de vehiculo. 
     */
    private void visualizarCajaPlaca() {

        this.cjplacacarro.setVisible(opCarro.isSelected());
        this.cjplacamoto.setVisible(opMoto.isSelected());
        Iconos iconos = new Iconos();
        if (opCarro.isSelected()){
            ImageIcon imagePar =  iconos.imagenCarro(lbImgTipoveh.getWidth(), lbImgTipoveh.getHeight());
            if (imagePar != null){
                lbImgTipoveh.setIcon(imagePar);
            }
        }else{
            ImageIcon imagePar =  iconos.imagenMoto(lbImgTipoveh.getWidth(), lbImgTipoveh.getHeight());
            if (imagePar != null){
                lbImgTipoveh.setIcon(imagePar);
            }
        }
        
    }

    private void ingresarVehiculo() {
        if (opCarro.isSelected()){
            this.asignarCarro();
        }else{
            this.asignarMoto();
        }
    }

    private void sacarVehiculo() {
        if (opCarro.isSelected()){
            this.sacarCarro();
        }else{
            this.sacarMoto();
        }
    }
    private boolean validarTexto(JTextField caja, String mensaje){
        if (caja.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, mensaje, "Información", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    } 

    private void actualizarCupos() {
    lbCupoCarro.setText(""+par.cuposDisponiblesCarros());
    lbCupoMoto.setText(""+par.cuposDisponiblesMotos());
    }
}
